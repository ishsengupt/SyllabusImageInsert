{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport youtube, { KEY } from \"./api/youtube\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport FileUpload from \"./components/FileUpload\";\nimport Results from \"./components/Results\";\nimport UploadedImagesProvider from \"./contexts/UploadedImagesProvider\";\nimport firebase, { FirebaseContext } from \"./firebase\";\nconst {\n  Header,\n  Content,\n  Footer\n} = Layout;\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 11,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo = responseArr[0].id.kind !== \"youtube#channel\" ? responseArr[0] : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FirebaseContext.Provider, {\n    value: {\n      firebase\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UploadedImagesProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileUpload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Results, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/App.js"],"names":["React","useState","youtube","KEY","Layout","Menu","Breadcrumb","FileUpload","Results","UploadedImagesProvider","firebase","FirebaseContext","Header","Content","Footer","App","videos","setVideos","selectedVideo","setSelectedVideo","onSearchSubmit","searchTerm","response","get","params","q","part","maxResults","key","responseArr","data","items","firstVideo","id","kind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,IAAkBC,GAAlB,QAA6B,eAA7B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,QAAyC,MAAzC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,QAAP,IAAmBC,eAAnB,QAA0C,YAA1C;AAEA,MAAM;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA;AAAnB,IAA8BV,MAApC;;AAEA,SAASW,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoClB,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMmB,cAAc,GAAG,MAAMC,UAAN,IAAoB;AACzC,UAAMC,QAAQ,GAAG,MAAMpB,OAAO,CAACqB,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEJ,UADG;AAENK,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,UAAU,EAAE,EAHN;AAINC,QAAAA,GAAG,EAAEzB;AAJC;AADoC,KAAvB,CAAvB;AAQA,UAAM0B,WAAW,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,KAAlC;AACA,UAAMC,UAAU,GACdH,WAAW,CAAC,CAAD,CAAX,CAAeI,EAAf,CAAkBC,IAAlB,KAA2B,iBAA3B,GACIL,WAAW,CAAC,CAAD,CADf,GAEIA,WAAW,CAAC,CAAD,CAHjB;AAIAZ,IAAAA,SAAS,CAACY,WAAD,CAAT;AACAV,IAAAA,gBAAgB,CAACa,UAAD,CAAhB;AACD,GAhBD;;AAiBA,sBACE,uDACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEtB,MAAAA;AAAF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAUD;;AAED,eAAeK,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport youtube, { KEY } from \"./api/youtube\";\nimport { Layout, Menu, Breadcrumb } from \"antd\";\nimport FileUpload from \"./components/FileUpload\";\nimport Results from \"./components/Results\";\nimport UploadedImagesProvider from \"./contexts/UploadedImagesProvider\";\nimport firebase, { FirebaseContext } from \"./firebase\";\n\nconst { Header, Content, Footer } = Layout;\n\nfunction App() {\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 11,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo =\n      responseArr[0].id.kind !== \"youtube#channel\"\n        ? responseArr[0]\n        : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n  };\n  return (\n    <>\n      <FirebaseContext.Provider value={{ firebase }}>\n        <UploadedImagesProvider>\n          <FileUpload />\n          <Results />\n        </UploadedImagesProvider>\n      </FirebaseContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
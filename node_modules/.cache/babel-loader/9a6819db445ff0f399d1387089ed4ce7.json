{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/contexts/UploadedImagesProvider.js\";\nimport React, { useState } from 'react'; // import merge from 'lodash.merge'\n\nimport UploadedImages from './UploadedImages';\n\nconst UploadedImagesProvider = ({\n  children\n}) => {\n  /**\n   * User details state / controls\n   */\n  const setUploadedImages = ({\n    base64,\n    ocrResultsRaw,\n    ocrResults,\n    loading,\n    createdAt\n  }) => {\n    updateUploaded(prevState => {\n      // console.log(prevState)\n      // let newImage = {\n      //   images: uploaded.images.concat(images)\n      // }\n      return { ...prevState,\n        base64,\n        ocrResultsRaw,\n        ocrResults,\n        loading,\n        createdAt\n      };\n    });\n  };\n\n  const imagesState = {\n    images: [],\n    base64: '',\n    ocrResultsRaw: '',\n    ocrResults: '',\n    loading: false,\n    createdAt: '',\n    setUploadedImages\n  };\n  const [uploaded, updateUploaded] = useState(imagesState);\n  return /*#__PURE__*/React.createElement(UploadedImages.Provider, {\n    value: uploaded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport default UploadedImagesProvider;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/contexts/UploadedImagesProvider.js"],"names":["React","useState","UploadedImages","UploadedImagesProvider","children","setUploadedImages","base64","ocrResultsRaw","ocrResults","loading","createdAt","updateUploaded","prevState","imagesState","images","uploaded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C;;;AAGA,QAAMC,iBAAiB,GAAG,CAAC;AACzBC,IAAAA,MADyB;AAEzBC,IAAAA,aAFyB;AAGzBC,IAAAA,UAHyB;AAIzBC,IAAAA,OAJyB;AAKzBC,IAAAA;AALyB,GAAD,KAMpB;AACJC,IAAAA,cAAc,CAACC,SAAS,IAAI;AAC1B;AACA;AACA;AACA;AACA,aAAO,EACL,GAAGA,SADE;AAELN,QAAAA,MAFK;AAGLC,QAAAA,aAHK;AAILC,QAAAA,UAJK;AAKLC,QAAAA,OALK;AAMLC,QAAAA;AANK,OAAP;AAQD,KAba,CAAd;AAcD,GArBD;;AAuBA,QAAMG,WAAW,GAAG;AAClBC,IAAAA,MAAM,EAAC,EADW;AAElBR,IAAAA,MAAM,EAAC,EAFW;AAGlBC,IAAAA,aAAa,EAAC,EAHI;AAIlBC,IAAAA,UAAU,EAAC,EAJO;AAKlBC,IAAAA,OAAO,EAAC,KALU;AAMlBC,IAAAA,SAAS,EAAE,EANO;AAOlBL,IAAAA;AAPkB,GAApB;AAUA,QAAM,CAACU,QAAD,EAAWJ,cAAX,IAA6BV,QAAQ,CAACY,WAAD,CAA3C;AAEA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEE,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,QADH,CADF;AAKD,CA5CD;;AA8CA,eAAeD,sBAAf","sourcesContent":["import React, { useState } from 'react'\n// import merge from 'lodash.merge'\nimport UploadedImages from './UploadedImages'\n\nconst UploadedImagesProvider = ({ children }) => {\n  /**\n   * User details state / controls\n   */\n  const setUploadedImages = ({\n    base64,\n    ocrResultsRaw,\n    ocrResults,\n    loading,\n    createdAt\n  }) => {\n    updateUploaded(prevState => {\n      // console.log(prevState)\n      // let newImage = {\n      //   images: uploaded.images.concat(images)\n      // }\n      return {\n        ...prevState,\n        base64,\n        ocrResultsRaw,\n        ocrResults,\n        loading,\n        createdAt\n      }\n    })\n  }\n\n  const imagesState = {\n    images:[],\n    base64:'',\n    ocrResultsRaw:'',\n    ocrResults:'',\n    loading:false,\n    createdAt: '',\n    setUploadedImages\n  }\n\n  const [uploaded, updateUploaded] = useState(imagesState)\n\n  return (\n    <UploadedImages.Provider value={uploaded}>\n      {children}\n    </UploadedImages.Provider>\n  )\n}\n\nexport default UploadedImagesProvider\n"]},"metadata":{},"sourceType":"module"}
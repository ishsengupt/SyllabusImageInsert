{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport UploadedImages from \"../contexts/UploadedImages\";\nimport useAxios from \"../hooks/useAxios\";\nimport useUrlBuilder from \"../hooks/useUrlBuilder\";\nimport { SearchBar } from \"../components/SearchBar\";\nimport { VideoList } from \"../components/VideoList\";\nimport { VideoDetail } from \"../components/VideoDetail\";\nimport youtube, { KEY } from \"../api/youtube\";\nimport FirebaseContext from \"../../firebase/context\";\nimport { vision } from \"../env\";\nconst {\n  Dragger\n} = Upload;\n\nfunction FileUpload() {\n  const uploaded = useContext(UploadedImages);\n  const {\n    loading,\n    setUploadedImages\n  } = uploaded;\n  const [tesText, settesText] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  function handleSubmit() {\n    const {\n      title,\n      img\n    } = values;\n    const newLink = {\n      title,\n      img,\n      category: sub,\n      desc: value[0].children[0].text,\n      userid: user.uid,\n      name: user.displayName,\n      voteCount: 0,\n      votes: [],\n      comments: [],\n      created: Date.now(),\n      switchVal: 1\n    };\n    firebase.db.collection(\"links\").add(newLink);\n    const voteRef = firebase.db.collection(\"category\").doc(sub);\n    voteRef.get().then(doc => {\n      if (doc.exists) {\n        const prevNum = doc.data().numPosts;\n        let newNum = prevNum + 1;\n        console.log(doc.data().numPosts);\n        firebase.db.collection(\"category\").doc(sub).set({\n          numPosts: newNum\n        }, {\n          merge: true\n        });\n      }\n    });\n    props.history.push(\"/\");\n  }\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 3,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo = responseArr[0].id.kind !== \"youtube#channel\" ? responseArr[0] : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n    console.log(responseArr);\n  };\n\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method: \"POST\"\n  });\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\";\n\n  const preFormat = arr => {\n    return [arr[0].x, arr[0].y, arr[1].x - arr[0].x, arr[3].y - arr[0].y];\n  };\n\n  const tidyResults = raw => {\n    let results = {\n      texts: [],\n      boundings: []\n    };\n    raw.map((item, index) => {\n      if (index > 0) {\n        results.texts.push(item.description);\n        results.boundings.push(preFormat(item.boundingPoly.vertices));\n      }\n    });\n    return results;\n  };\n\n  const messageKey = \"loadingMsg\";\n\n  const onLoading = () => {\n    message.loading({\n      content: \"Analyzing image..\",\n      duration: 0,\n      key: messageKey\n    });\n  };\n\n  const props = {\n    name: \"file\",\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload: file => {\n      onLoading(true); // onLoading(false)\n\n      setUploadedImages({\n        loading: true\n      });\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const base64 = e.target.result.toString().replace(/^data:(.*,)?/, \"\");\n        ocrSend({\n          url: endpoint,\n          params: {\n            key: vision.api_key\n          },\n          data: {\n            requests: [{\n              image: {\n                content: base64\n              },\n              features: [{\n                type: \"DOCUMENT_TEXT_DETECTION\"\n              }]\n            }]\n          }\n        }, res => {\n          console.log(res);\n          console.log(res.responses[0].fullTextAnnotation.text);\n          settesText(res.responses[0].fullTextAnnotation.text);\n          const searchVal = res.responses[0].fullTextAnnotation.text.split(/\\s*[\\r\\n]+\\s*/g);\n          console.log(searchVal);\n          console.log(searchVal[7]); // console.log(onSearchSubmit(searchVal[7]));\n\n          onSearchSubmit(searchVal[7]);\n          setUploadedImages({\n            loading: false,\n            base64,\n            ocrResultsRaw: res.responses[0],\n            ocrResults: tidyResults(res.responses[0].textAnnotations),\n            createdAt: new Date()\n          });\n          console.log(new Date());\n          message.success({\n            content: `action done successfully.`,\n            key: messageKey\n          });\n        }, e => {\n          console.log(e);\n          setUploadedImages({\n            loading: false\n          });\n          message.error({\n            content: `Ops, Something wrong`,\n            key: messageKey\n          });\n        });\n      };\n\n      reader.readAsDataURL(file); // Prevent upload\n\n      return false;\n    } // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, \"Inbox\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, \"Click or drag image to this area to start analyze\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, \"Only accept jpeg,jpg and png files.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"five wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, tesText, /*#__PURE__*/React.createElement(VideoList, {\n    videos: videos,\n    setSelectedVideo: setSelectedVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-center subreddit-padding mtother\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button cda-remove\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js"],"names":["React","useContext","useState","Upload","message","UploadedImages","useAxios","useUrlBuilder","SearchBar","VideoList","VideoDetail","youtube","KEY","FirebaseContext","vision","Dragger","FileUpload","uploaded","loading","setUploadedImages","tesText","settesText","videos","setVideos","selectedVideo","setSelectedVideo","handleSubmit","title","img","values","newLink","category","sub","desc","value","children","text","userid","user","uid","name","displayName","voteCount","votes","comments","created","Date","now","switchVal","firebase","db","collection","add","voteRef","doc","get","then","exists","prevNum","data","numPosts","newNum","console","log","set","merge","props","history","push","onSearchSubmit","searchTerm","response","params","q","part","maxResults","key","responseArr","items","firstVideo","id","kind","ocrState","ocrSend","url","method","endpoint","preFormat","arr","x","y","tidyResults","raw","results","texts","boundings","map","item","index","description","boundingPoly","vertices","messageKey","onLoading","content","duration","multiple","accept","showUploadList","disabled","beforeUpload","file","reader","FileReader","onload","e","base64","target","result","toString","replace","api_key","requests","image","features","type","res","responses","fullTextAnnotation","searchVal","split","ocrResultsRaw","ocrResults","textAnnotations","createdAt","success","error","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport UploadedImages from \"../contexts/UploadedImages\";\nimport useAxios from \"../hooks/useAxios\";\nimport useUrlBuilder from \"../hooks/useUrlBuilder\";\nimport { SearchBar } from \"../components/SearchBar\";\nimport { VideoList } from \"../components/VideoList\";\nimport { VideoDetail } from \"../components/VideoDetail\";\nimport youtube, { KEY } from \"../api/youtube\";\nimport FirebaseContext from \"../../firebase/context\";\nimport { vision } from \"../env\";\n\nconst { Dragger } = Upload;\n\nfunction FileUpload() {\n  const uploaded = useContext(UploadedImages);\n  const { loading, setUploadedImages } = uploaded;\n  const [tesText, settesText] = useState(\"\");\n\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  function handleSubmit() {\n    const { title, img } = values;\n    const newLink = {\n      title,\n      img,\n      category: sub,\n      desc: value[0].children[0].text,\n      userid: user.uid,\n      name: user.displayName,\n      voteCount: 0,\n      votes: [],\n      comments: [],\n      created: Date.now(),\n      switchVal: 1\n    };\n    firebase.db.collection(\"links\").add(newLink);\n    const voteRef = firebase.db.collection(\"category\").doc(sub);\n    voteRef.get().then(doc => {\n      if (doc.exists) {\n        const prevNum = doc.data().numPosts;\n        let newNum = prevNum + 1;\n        console.log(doc.data().numPosts);\n        firebase.db\n          .collection(\"category\")\n          .doc(sub)\n          .set(\n            {\n              numPosts: newNum\n            },\n            { merge: true }\n          );\n      }\n    });\n\n    props.history.push(\"/\");\n  }\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 3,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo =\n      responseArr[0].id.kind !== \"youtube#channel\"\n        ? responseArr[0]\n        : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n    console.log(responseArr);\n  };\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method: \"POST\"\n  });\n\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\";\n\n  const preFormat = arr => {\n    return [arr[0].x, arr[0].y, arr[1].x - arr[0].x, arr[3].y - arr[0].y];\n  };\n\n  const tidyResults = raw => {\n    let results = {\n      texts: [],\n      boundings: []\n    };\n    raw.map((item, index) => {\n      if (index > 0) {\n        results.texts.push(item.description);\n        results.boundings.push(preFormat(item.boundingPoly.vertices));\n      }\n    });\n    return results;\n  };\n\n  const messageKey = \"loadingMsg\";\n\n  const onLoading = () => {\n    message.loading({\n      content: \"Analyzing image..\",\n      duration: 0,\n      key: messageKey\n    });\n  };\n\n  const props = {\n    name: \"file\",\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload: file => {\n      onLoading(true);\n      // onLoading(false)\n\n      setUploadedImages({\n        loading: true\n      });\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const base64 = e.target.result.toString().replace(/^data:(.*,)?/, \"\");\n        ocrSend(\n          {\n            url: endpoint,\n            params: {\n              key: vision.api_key\n            },\n            data: {\n              requests: [\n                {\n                  image: {\n                    content: base64\n                  },\n                  features: [\n                    {\n                      type: \"DOCUMENT_TEXT_DETECTION\"\n                    }\n                  ]\n                }\n              ]\n            }\n          },\n          res => {\n            console.log(res);\n            console.log(res.responses[0].fullTextAnnotation.text);\n            settesText(res.responses[0].fullTextAnnotation.text);\n            const searchVal = res.responses[0].fullTextAnnotation.text.split(\n              /\\s*[\\r\\n]+\\s*/g\n            );\n            console.log(searchVal);\n            console.log(searchVal[7]);\n            // console.log(onSearchSubmit(searchVal[7]));\n            onSearchSubmit(searchVal[7]);\n            setUploadedImages({\n              loading: false,\n              base64,\n              ocrResultsRaw: res.responses[0],\n              ocrResults: tidyResults(res.responses[0].textAnnotations),\n              createdAt: new Date()\n            });\n            console.log(new Date());\n            message.success({\n              content: `action done successfully.`,\n              key: messageKey\n            });\n          },\n          e => {\n            console.log(e);\n            setUploadedImages({\n              loading: false\n            });\n            message.error({\n              content: `Ops, Something wrong`,\n              key: messageKey\n            });\n          }\n        );\n      };\n      reader.readAsDataURL(file);\n\n      // Prevent upload\n      return false;\n    }\n    // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n  };\n\n  return (\n    <>\n      <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">Inbox</p>\n        <p className=\"ant-upload-text\">\n          Click or drag image to this area to start analyze\n        </p>\n\n        <p className=\"ant-upload-hint\">Only accept jpeg,jpg and png files.</p>\n      </Dragger>\n      <div className=\"five wide column\">\n        {tesText}\n        <VideoList videos={videos} setSelectedVideo={setSelectedVideo} />\n      </div>\n      <form\n        onSubmit={handleSubmit}\n        className=\"form-center subreddit-padding mtother\"\n      >\n        <div className=\"form__margin\">\n          <button className=\"button cda-remove\" type=\"submit\">\n            Submit\n          </button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}
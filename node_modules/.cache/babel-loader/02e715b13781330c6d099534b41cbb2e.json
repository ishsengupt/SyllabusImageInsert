{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js\";\nimport React, { useContext } from 'react';\nimport { Upload, Icon, message } from 'antd';\nimport UploadedImages from '../contexts/UploadedImages';\nimport useAxios from '../hooks/useAxios';\nimport useUrlBuilder from '../hooks/useUrlBuilder';\nimport { vision } from '../env';\nconst {\n  Dragger\n} = Upload;\n\nconst FileUpload = () => {\n  const uploaded = useContext(UploadedImages);\n  const {\n    loading,\n    setUploadedImages\n  } = uploaded;\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method: 'POST'\n  });\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\";\n\n  const preFormat = arr => {\n    return [arr[0].x, arr[0].y, arr[1].x - arr[0].x, arr[3].y - arr[0].y];\n  };\n\n  const tidyResults = raw => {\n    let results = {\n      texts: [],\n      boundings: []\n    };\n    raw.map((item, index) => {\n      if (index > 0) {\n        results.texts.push(item.description);\n        results.boundings.push(preFormat(item.boundingPoly.vertices));\n      }\n    });\n    return results;\n  };\n\n  const messageKey = 'loadingMsg';\n\n  const onLoading = () => {\n    message.loading({\n      content: 'Analyzing image..',\n      duration: 0,\n      key: messageKey\n    });\n  };\n\n  const props = {\n    name: 'file',\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload: file => {\n      onLoading(true); // onLoading(false)\n\n      setUploadedImages({\n        loading: true\n      });\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const base64 = e.target.result.toString().replace(/^data:(.*,)?/, '');\n        ocrSend({\n          url: endpoint,\n          params: {\n            key: vision.api_key\n          },\n          data: {\n            requests: [{\n              image: {\n                content: base64\n              },\n              features: [{\n                type: \"TEXT_DETECTION\"\n              }]\n            }]\n          }\n        }, res => {\n          console.log(res);\n          setUploadedImages({\n            loading: false,\n            base64,\n            ocrResultsRaw: res.responses[0],\n            ocrResults: tidyResults(res.responses[0].textAnnotations),\n            createdAt: new Date()\n          });\n          console.log(new Date());\n          message.success({\n            content: `action done successfully.`,\n            key: messageKey\n          });\n        }, e => {\n          console.log(e);\n          setUploadedImages({\n            loading: false\n          });\n          message.error({\n            content: `Ops, Something wrong`,\n            key: messageKey\n          });\n        });\n      };\n\n      reader.readAsDataURL(file); // Prevent upload\n\n      return false;\n    } // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n\n  };\n  return /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    type: \"inbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, \"Click or drag image to this area to start analyze\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, \"Only accept jpeg,jpg and png files.\"));\n};\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js"],"names":["React","useContext","Upload","Icon","message","UploadedImages","useAxios","useUrlBuilder","vision","Dragger","FileUpload","uploaded","loading","setUploadedImages","ocrState","ocrSend","url","method","endpoint","preFormat","arr","x","y","tidyResults","raw","results","texts","boundings","map","item","index","push","description","boundingPoly","vertices","messageKey","onLoading","content","duration","key","props","name","multiple","accept","showUploadList","disabled","beforeUpload","file","reader","FileReader","onload","e","base64","target","result","toString","replace","params","api_key","data","requests","image","features","type","res","console","log","ocrResultsRaw","responses","ocrResults","textAnnotations","createdAt","Date","success","error","readAsDataURL"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Upload, Icon, message } from 'antd';\nimport UploadedImages from '../contexts/UploadedImages'\nimport useAxios from '../hooks/useAxios'\nimport useUrlBuilder from '../hooks/useUrlBuilder'\nimport { vision } from '../env'\nconst { Dragger } = Upload;\n\nconst FileUpload = () => {\n  const uploaded = useContext(UploadedImages)\n  const { loading, setUploadedImages } = uploaded\n\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method:'POST'\n  })\n\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\"\n\n  const preFormat = (arr) =>{\n    return [\n      arr[0].x,\n      arr[0].y,\n      arr[1].x-arr[0].x,\n      arr[3].y-arr[0].y\n    ]\n  }\n\n  const tidyResults = (raw)=>{\n    let results = {\n        texts:[],\n        boundings:[]\n    }\n    raw.map((item,index)=>{\n      if(index>0){\n        results.texts.push(item.description)\n        results.boundings.push(preFormat(item.boundingPoly.vertices))\n      }\n    })\n    return results\n  }\n\n  const messageKey = 'loadingMsg';\n\n  const onLoading = () => {\n      message.loading({\n        content:'Analyzing image..',\n        duration:0,\n        key:messageKey\n      });\n  };\n\n  const props = {\n    name: 'file',\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload:(file) => {\n        onLoading(true)\n        // onLoading(false)\n\n        setUploadedImages({\n          loading:true\n        })\n        const reader = new FileReader();\n\n        reader.onload = e => {\n            const base64 = e.target.result.toString().replace(/^data:(.*,)?/, '')\n            ocrSend({\n              url:endpoint,\n              params:{\n                key:vision.api_key,\n              },\n              data:{\n                requests:[\n                  {\n                    image:{\n                      content:base64\n                    },\n                    features:[\n                      {\n                        type: \"TEXT_DETECTION\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            },(res)=>{\n              console.log(res)\n              setUploadedImages({\n                loading:false,\n                base64,\n                ocrResultsRaw:res.responses[0],\n                ocrResults:tidyResults(res.responses[0].textAnnotations),\n                createdAt: new Date()\n              })\n              console.log(new Date())\n              message.success({\n                content:`action done successfully.`,\n                key:messageKey\n              });\n            },(e)=>{\n              console.log(e)\n              setUploadedImages({\n                loading:false\n              })\n              message.error({\n                content:`Ops, Something wrong`,\n                key:messageKey\n              });\n            })\n\n\n        };\n        reader.readAsDataURL(file);\n\n        // Prevent upload\n        return false;\n    },\n    // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n  };\n\n  return (\n    <Dragger {...props}>\n    <p className=\"ant-upload-drag-icon\">\n      <Icon type=\"inbox\" />\n    </p>\n    <p className=\"ant-upload-text\">Click or drag image to this area to start analyze</p>\n    <p className=\"ant-upload-hint\">\n      Only accept jpeg,jpg and png files.\n    </p>\n  </Dragger>\n  )\n}\n\nexport default FileUpload\n"]},"metadata":{},"sourceType":"module"}
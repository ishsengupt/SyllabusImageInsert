{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/components/Results.js\";\nimport React, { useContext, useState, useEffect, Fragment } from 'react';\nimport { Collapse, notification, Skeleton, Row, Col } from 'antd';\nimport UploadedImages from '../contexts/UploadedImages';\nimport Boundingbox from 'react-bbox';\nconst {\n  Panel\n} = Collapse;\n\nconst Results = () => {\n  const {\n    images,\n    base64,\n    ocrResultsRaw,\n    ocrResults,\n    createdAt,\n    loading,\n    setUploadedImages\n  } = useContext(UploadedImages);\n\n  const onClicked = index => {\n    if (index > 0) // console.log(index)\n      // console.log(ocrResults)\n      // console.log(ocrResults && ocrResults.texts[index])\n      popDetail(ocrResults.texts[index]);\n  };\n\n  const popDetail = text => {\n    notification.open({\n      message: 'Detail Text',\n      description: text,\n      onClick: () => {// console.log('Notification Clicked!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    type: \"flex\",\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    style: {\n      margin: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, loading && /*#__PURE__*/React.createElement(Skeleton, {\n    active: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), ocrResultsRaw && /*#__PURE__*/React.createElement(Boundingbox, {\n    image: base64,\n    boxes: ocrResults.boundings,\n    onClicked: onClicked,\n    options: {\n      base64Image: true,\n      colors: {\n        normal: 'rgba(255,225,255,1)',\n        selected: 'rgba(0,225,204,1)',\n        unselected: 'rgba(100,100,100,1)'\n      },\n      style: {\n        maxWidth: '100%',\n        maxHeight: '90vh'\n      } //showLabels: false\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default Results;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/components/Results.js"],"names":["React","useContext","useState","useEffect","Fragment","Collapse","notification","Skeleton","Row","Col","UploadedImages","Boundingbox","Panel","Results","images","base64","ocrResultsRaw","ocrResults","createdAt","loading","setUploadedImages","onClicked","index","popDetail","texts","text","open","message","description","onClick","margin","boundings","base64Image","colors","normal","selected","unselected","style","maxWidth","maxHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,QAAjC,EAA2CC,GAA3C,EAAgDC,GAAhD,QAA2D,MAA3D;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYP,QAAlB;;AAEA,MAAMQ,OAAO,GAAG,MAAK;AACnB,QAAM;AAAEC,IAAAA,MAAF;AACJC,IAAAA,MADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAMkBnB,UAAU,CAACS,cAAD,CANlC;;AAQA,QAAMW,SAAS,GAAIC,KAAD,IAAU;AAC1B,QAAGA,KAAK,GAAC,CAAT,EACA;AACA;AACA;AACAC,MAAAA,SAAS,CAACN,UAAU,CAACO,KAAX,CAAiBF,KAAjB,CAAD,CAAT;AACD,GAND;;AAQA,QAAMC,SAAS,GAAIE,IAAD,IAAU;AAC1BnB,IAAAA,YAAY,CAACoB,IAAb,CAAkB;AAChBC,MAAAA,OAAO,EAAE,aADO;AAEhBC,MAAAA,WAAW,EAAEH,IAFG;AAGhBI,MAAAA,OAAO,EAAE,MAAM,CACb;AACD;AALe,KAAlB;AAOD,GARD;;AAUA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,OAAO,EAAC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAe,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC;AAAR,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIX,OAAO,iBACP,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAIGH,aAAa,iBACV,oBAAC,WAAD;AACI,IAAA,KAAK,EAAED,MADX;AAEI,IAAA,KAAK,EAAEE,UAAU,CAACc,SAFtB;AAGI,IAAA,SAAS,EAAEV,SAHf;AAII,IAAA,OAAO,EAAE;AACLW,MAAAA,WAAW,EAAE,IADR;AAELC,MAAAA,MAAM,EAAE;AACNC,QAAAA,MAAM,EAAE,qBADF;AAENC,QAAAA,QAAQ,EAAE,mBAFJ;AAGNC,QAAAA,UAAU,EAAE;AAHN,OAFH;AAOLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,MADL;AAELC,QAAAA,SAAS,EAAE;AAFN,OAPF,CAWL;;AAXK,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALN,CADF,CADF,CADF;AAgCD,CA3DD;;AA4DA,eAAe1B,OAAf","sourcesContent":["import React, { useContext, useState, useEffect, Fragment } from 'react';\nimport { Collapse, notification, Skeleton, Row, Col } from 'antd';\nimport UploadedImages from '../contexts/UploadedImages'\nimport Boundingbox from 'react-bbox'\n\nconst { Panel } = Collapse;\n\nconst Results = () =>{\n  const { images,\n    base64,\n    ocrResultsRaw,\n    ocrResults,\n    createdAt,\n    loading,\n    setUploadedImages } = useContext(UploadedImages)\n\n  const onClicked = (index) =>{\n    if(index>0)\n    // console.log(index)\n    // console.log(ocrResults)\n    // console.log(ocrResults && ocrResults.texts[index])\n    popDetail(ocrResults.texts[index])\n  }\n\n  const popDetail = (text) => {\n    notification.open({\n      message: 'Detail Text',\n      description: text,\n      onClick: () => {\n        // console.log('Notification Clicked!');\n      },\n    });\n  };\n\n  return (\n    <Fragment>\n      <Row type=\"flex\" justify=\"center\" >\n        <Col span={12} style={{margin:'5px'}}>\n          { loading &&\n            <Skeleton active/>\n          }\n          {ocrResultsRaw &&\n              <Boundingbox\n                  image={base64}\n                  boxes={ocrResults.boundings}\n                  onClicked={onClicked}\n                  options={{\n                      base64Image: true,\n                      colors: {\n                        normal: 'rgba(255,225,255,1)',\n                        selected: 'rgba(0,225,204,1)',\n                        unselected: 'rgba(100,100,100,1)'\n                      },\n                      style: {\n                        maxWidth: '100%',\n                        maxHeight: '90vh'\n                      }\n                      //showLabels: false\n                    }}\n                />\n          }\n        </Col>\n      </Row>\n\n    </Fragment>\n  )\n}\nexport default Results\n"]},"metadata":{},"sourceType":"module"}
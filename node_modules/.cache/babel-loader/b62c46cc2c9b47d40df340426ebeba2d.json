{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js\";\nimport React, { useContext, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport UploadedImages from \"../contexts/UploadedImages\";\nimport useAxios from \"../hooks/useAxios\";\nimport useUrlBuilder from \"../hooks/useUrlBuilder\";\nimport { SearchBar } from \"../components/SearchBar\";\nimport { VideoList } from \"../components/VideoList\";\nimport { VideoDetail } from \"../components/VideoDetail\";\nimport youtube, { KEY } from \"../api/youtube\";\nimport FirebaseContext from \"../firebase/context\";\nimport { vision } from \"../env\";\nimport axios from \"axios\";\nconst {\n  Dragger\n} = Upload;\n\nfunction FileUpload() {\n  const uploaded = useContext(UploadedImages);\n  const {\n    loading,\n    setUploadedImages\n  } = uploaded;\n  const [tesText, settesText] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [realloading, setLoading] = useState(true);\n  const [docTitle, setdocTitle] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const {\n    firebase\n  } = React.useContext(FirebaseContext);\n\n  function handleSubmit() {\n    const newTitle = messages[1].item;\n    setdocTitle(\"ID\" + newTitle);\n    const newLink = {\n      messages,\n      newTitle: \"ID\" + newTitle\n    };\n    console.log(newTitle);\n    firebase.db.collection(\"syllabus\").doc(\"Id\" + newTitle).set(newLink);\n    console.log(newLink); //firebase.db.collection(\"links\").add(newLink);\n    //const voteRef = firebase.db.collection(\"category\").doc(sub);\n\n    /*    voteRef.get().then(doc => {\n      if (doc.exists) {\n         const prevNum = doc.data().numPosts;\n        let newNum = prevNum + 1;\n        console.log(doc.data().numPosts);\n        firebase.db\n          .collection(\"category\")\n          .doc(sub)\n          .set(\n            {\n              numPosts: newNum\n            },\n            { merge: true }\n          ); \n      }*/\n  }\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 1,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo = responseArr[0].id.kind !== \"youtube#channel\" ? responseArr[0] : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n    return responseArr;\n  };\n\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method: \"POST\"\n  });\n\n  const fetchLinks = endpoint => {\n    fetch(endpoint);\n    then(res => res.text()) // convert to plain text\n    .then(text => console.log(text));\n  };\n\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\";\n  const searchEndpoint = \"https://reddit-scraper.vercel.app/search\";\n\n  const preFormat = arr => {\n    return [arr[0].x, arr[0].y, arr[1].x - arr[0].x, arr[3].y - arr[0].y];\n  };\n\n  const tidyResults = raw => {\n    let results = {\n      texts: [],\n      boundings: []\n    };\n    raw.map((item, index) => {\n      if (index > 0) {\n        results.texts.push(item.description);\n        results.boundings.push(preFormat(item.boundingPoly.vertices));\n      }\n    });\n    return results;\n  };\n\n  const messageKey = \"loadingMsg\";\n\n  const onLoading = () => {\n    message.loading({\n      content: \"Analyzing image..\",\n      duration: 0,\n      key: messageKey\n    });\n  };\n\n  const props = {\n    name: \"file\",\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload: file => {\n      onLoading(true); // onLoading(false)\n\n      setUploadedImages({\n        loading: true\n      });\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const base64 = e.target.result.toString().replace(/^data:(.*,)?/, \"\");\n        ocrSend({\n          url: endpoint,\n          params: {\n            key: vision.api_key\n          },\n          data: {\n            requests: [{\n              image: {\n                content: base64\n              },\n              features: [{\n                type: \"DOCUMENT_TEXT_DETECTION\"\n              }]\n            }]\n          }\n        }, res => {\n          const searchVal = res.responses[0].fullTextAnnotation.text.split(/\\s*[\\r\\n]+\\s*/g);\n          settesText(searchVal);\n          let searchArr = [];\n          searchVal.map((item, index) => {\n            fetchLinks(`${searchEndpoint}${item}`);\n            const testItem = onSearchSubmit(item);\n            let searchItem;\n            testItem.then(val => {\n              searchItem = {\n                val,\n                item\n              }; //console.log(searchItem);\n\n              searchArr.push(searchItem); //console.log(searchArr);\n\n              setMessages(searchArr);\n            });\n          });\n          setUploadedImages({\n            loading: false,\n            base64,\n            ocrResultsRaw: res.responses[0],\n            ocrResults: tidyResults(res.responses[0].textAnnotations),\n            createdAt: new Date()\n          });\n          console.log(new Date());\n          message.success({\n            content: `action done successfully.`,\n            key: messageKey\n          });\n        }, e => {\n          console.log(e);\n          setUploadedImages({\n            loading: false\n          });\n          message.error({\n            content: `Ops, Something wrong`,\n            key: messageKey\n          });\n        });\n      };\n\n      reader.readAsDataURL(file); // Prevent upload\n\n      return false;\n    } // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n\n  };\n  let submitButton;\n\n  if (videos.length > 0) {\n    submitButton = /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button cda-remove\",\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 7\n      }\n    }, \"Submit\");\n  } else {\n    submitButton = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 20\n      }\n    }, \"No syllabus entered\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dragger, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-drag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Inbox\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, \"Click or drag image to this area to start analyze\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"ant-upload-hint\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, \"Only accept jpeg,jpg and png files.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"five wide column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, tesText, /*#__PURE__*/React.createElement(VideoList, {\n    videos: videos,\n    setSelectedVideo: setSelectedVideo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form__margin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, submitButton));\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/components/FileUpload.js"],"names":["React","useContext","useState","Upload","message","UploadedImages","useAxios","useUrlBuilder","SearchBar","VideoList","VideoDetail","youtube","KEY","FirebaseContext","vision","axios","Dragger","FileUpload","uploaded","loading","setUploadedImages","tesText","settesText","messages","setMessages","realloading","setLoading","docTitle","setdocTitle","videos","setVideos","selectedVideo","setSelectedVideo","firebase","handleSubmit","newTitle","item","newLink","console","log","db","collection","doc","set","onSearchSubmit","searchTerm","response","get","params","q","part","maxResults","key","responseArr","data","items","firstVideo","id","kind","ocrState","ocrSend","url","method","fetchLinks","endpoint","fetch","then","res","text","searchEndpoint","preFormat","arr","x","y","tidyResults","raw","results","texts","boundings","map","index","push","description","boundingPoly","vertices","messageKey","onLoading","content","duration","props","name","multiple","accept","showUploadList","disabled","beforeUpload","file","reader","FileReader","onload","e","base64","target","result","toString","replace","api_key","requests","image","features","type","searchVal","responses","fullTextAnnotation","split","searchArr","testItem","searchItem","val","ocrResultsRaw","ocrResults","textAnnotations","createdAt","Date","success","error","readAsDataURL","submitButton","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,MAAhC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,OAAP,IAAkBC,GAAlB,QAA6B,gBAA7B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcb,MAApB;;AAEA,SAASc,UAAT,GAAsB;AACpB,QAAMC,QAAQ,GAAGjB,UAAU,CAACI,cAAD,CAA3B;AACA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAiCF,QAAvC;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,WAAD,EAAcC,UAAd,IAA4BxB,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACyB,QAAD,EAAWC,WAAX,IAA0B1B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC2B,MAAD,EAASC,SAAT,IAAsB5B,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAC6B,aAAD,EAAgBC,gBAAhB,IAAoC9B,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM;AAAE+B,IAAAA;AAAF,MAAejC,KAAK,CAACC,UAAN,CAAiBY,eAAjB,CAArB;;AAEA,WAASqB,YAAT,GAAwB;AACtB,UAAMC,QAAQ,GAAGZ,QAAQ,CAAC,CAAD,CAAR,CAAYa,IAA7B;AACAR,IAAAA,WAAW,CAAC,OAAOO,QAAR,CAAX;AACA,UAAME,OAAO,GAAG;AACdd,MAAAA,QADc;AAEdY,MAAAA,QAAQ,EAAE,OAAOA;AAFH,KAAhB;AAIAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAF,IAAAA,QAAQ,CAACO,EAAT,CACGC,UADH,CACc,UADd,EAEGC,GAFH,CAEO,OAAOP,QAFd,EAGGQ,GAHH,CAGON,OAHP;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ,EAZsB,CAatB;AACA;;AACA;;;;;;;;;;;;;;;AAeD;;AAED,QAAMO,cAAc,GAAG,MAAMC,UAAN,IAAoB;AACzC,UAAMC,QAAQ,GAAG,MAAMnC,OAAO,CAACoC,GAAR,CAAY,SAAZ,EAAuB;AAC5CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,CAAC,EAAEJ,UADG;AAENK,QAAAA,IAAI,EAAE,SAFA;AAGNC,QAAAA,UAAU,EAAE,CAHN;AAINC,QAAAA,GAAG,EAAExC;AAJC;AADoC,KAAvB,CAAvB;AAQA,UAAMyC,WAAW,GAAGP,QAAQ,CAACQ,IAAT,CAAcC,KAAlC;AACA,UAAMC,UAAU,GACdH,WAAW,CAAC,CAAD,CAAX,CAAeI,EAAf,CAAkBC,IAAlB,KAA2B,iBAA3B,GACIL,WAAW,CAAC,CAAD,CADf,GAEIA,WAAW,CAAC,CAAD,CAHjB;AAIAvB,IAAAA,SAAS,CAACuB,WAAD,CAAT;AACArB,IAAAA,gBAAgB,CAACwB,UAAD,CAAhB;AACA,WAAOH,WAAP;AACD,GAjBD;;AAkBA,QAAM,CAACM,QAAD,EAAWC,OAAX,IAAsBtD,QAAQ,CAAC;AACnCuD,IAAAA,GAAG,EAAG,iBAD6B;AAEnCC,IAAAA,MAAM,EAAE;AAF2B,GAAD,CAApC;;AAKA,QAAMC,UAAU,GAAGC,QAAQ,IAAI;AAC7BC,IAAAA,KAAK,CAACD,QAAD,CAAL;AACAE,IAAAA,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAR,CAAJ,CAAwB;AAAxB,KACGF,IADH,CACQE,IAAI,IAAI9B,OAAO,CAACC,GAAR,CAAY6B,IAAZ,CADhB;AAED,GAJD;;AAMA,QAAMJ,QAAQ,GAAG,kDAAjB;AACA,QAAMK,cAAc,GAAG,0CAAvB;;AACA,QAAMC,SAAS,GAAGC,GAAG,IAAI;AACvB,WAAO,CAACA,GAAG,CAAC,CAAD,CAAH,CAAOC,CAAR,EAAWD,GAAG,CAAC,CAAD,CAAH,CAAOE,CAAlB,EAAqBF,GAAG,CAAC,CAAD,CAAH,CAAOC,CAAP,GAAWD,GAAG,CAAC,CAAD,CAAH,CAAOC,CAAvC,EAA0CD,GAAG,CAAC,CAAD,CAAH,CAAOE,CAAP,GAAWF,GAAG,CAAC,CAAD,CAAH,CAAOE,CAA5D,CAAP;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAGC,GAAG,IAAI;AACzB,QAAIC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,SAAS,EAAE;AAFC,KAAd;AAIAH,IAAAA,GAAG,CAACI,GAAJ,CAAQ,CAAC3C,IAAD,EAAO4C,KAAP,KAAiB;AACvB,UAAIA,KAAK,GAAG,CAAZ,EAAe;AACbJ,QAAAA,OAAO,CAACC,KAAR,CAAcI,IAAd,CAAmB7C,IAAI,CAAC8C,WAAxB;AACAN,QAAAA,OAAO,CAACE,SAAR,CAAkBG,IAAlB,CAAuBX,SAAS,CAAClC,IAAI,CAAC+C,YAAL,CAAkBC,QAAnB,CAAhC;AACD;AACF,KALD;AAMA,WAAOR,OAAP;AACD,GAZD;;AAcA,QAAMS,UAAU,GAAG,YAAnB;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBlF,IAAAA,OAAO,CAACe,OAAR,CAAgB;AACdoE,MAAAA,OAAO,EAAE,mBADK;AAEdC,MAAAA,QAAQ,EAAE,CAFI;AAGdpC,MAAAA,GAAG,EAAEiC;AAHS,KAAhB;AAKD,GAND;;AAQA,QAAMI,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,MADM;AAEZC,IAAAA,QAAQ,EAAE,KAFE;AAGZC,IAAAA,MAAM,EAAE,iBAHI;AAIZC,IAAAA,cAAc,EAAE,KAJJ;AAKZC,IAAAA,QAAQ,EAAE3E,OALE;AAMZ4E,IAAAA,YAAY,EAAEC,IAAI,IAAI;AACpBV,MAAAA,SAAS,CAAC,IAAD,CAAT,CADoB,CAEpB;;AAEAlE,MAAAA,iBAAiB,CAAC;AAChBD,QAAAA,OAAO,EAAE;AADO,OAAD,CAAjB;AAGA,YAAM8E,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgBC,CAAC,IAAI;AACnB,cAAMC,MAAM,GAAGD,CAAC,CAACE,MAAF,CAASC,MAAT,CAAgBC,QAAhB,GAA2BC,OAA3B,CAAmC,cAAnC,EAAmD,EAAnD,CAAf;AACA7C,QAAAA,OAAO,CACL;AACEC,UAAAA,GAAG,EAAEG,QADP;AAEEhB,UAAAA,MAAM,EAAE;AACNI,YAAAA,GAAG,EAAEtC,MAAM,CAAC4F;AADN,WAFV;AAKEpD,UAAAA,IAAI,EAAE;AACJqD,YAAAA,QAAQ,EAAE,CACR;AACEC,cAAAA,KAAK,EAAE;AACLrB,gBAAAA,OAAO,EAAEc;AADJ,eADT;AAIEQ,cAAAA,QAAQ,EAAE,CACR;AACEC,gBAAAA,IAAI,EAAE;AADR,eADQ;AAJZ,aADQ;AADN;AALR,SADK,EAqBL3C,GAAG,IAAI;AACL,gBAAM4C,SAAS,GAAG5C,GAAG,CAAC6C,SAAJ,CAAc,CAAd,EAAiBC,kBAAjB,CAAoC7C,IAApC,CAAyC8C,KAAzC,CAChB,gBADgB,CAAlB;AAIA5F,UAAAA,UAAU,CAACyF,SAAD,CAAV;AACA,cAAII,SAAS,GAAG,EAAhB;AACAJ,UAAAA,SAAS,CAAChC,GAAV,CAAc,CAAC3C,IAAD,EAAO4C,KAAP,KAAiB;AAC7BjB,YAAAA,UAAU,CAAE,GAAEM,cAAe,GAAEjC,IAAK,EAA1B,CAAV;AACA,kBAAMgF,QAAQ,GAAGxE,cAAc,CAACR,IAAD,CAA/B;AACA,gBAAIiF,UAAJ;AACAD,YAAAA,QAAQ,CAAClD,IAAT,CAAcoD,GAAG,IAAI;AACnBD,cAAAA,UAAU,GAAG;AACXC,gBAAAA,GADW;AAEXlF,gBAAAA;AAFW,eAAb,CADmB,CAKnB;;AACA+E,cAAAA,SAAS,CAAClC,IAAV,CAAeoC,UAAf,EANmB,CAOnB;;AACA7F,cAAAA,WAAW,CAAC2F,SAAD,CAAX;AACD,aATD;AAUD,WAdD;AAgBA/F,UAAAA,iBAAiB,CAAC;AAChBD,YAAAA,OAAO,EAAE,KADO;AAEhBkF,YAAAA,MAFgB;AAGhBkB,YAAAA,aAAa,EAAEpD,GAAG,CAAC6C,SAAJ,CAAc,CAAd,CAHC;AAIhBQ,YAAAA,UAAU,EAAE9C,WAAW,CAACP,GAAG,CAAC6C,SAAJ,CAAc,CAAd,EAAiBS,eAAlB,CAJP;AAKhBC,YAAAA,SAAS,EAAE,IAAIC,IAAJ;AALK,WAAD,CAAjB;AAOArF,UAAAA,OAAO,CAACC,GAAR,CAAY,IAAIoF,IAAJ,EAAZ;AACAvH,UAAAA,OAAO,CAACwH,OAAR,CAAgB;AACdrC,YAAAA,OAAO,EAAG,2BADI;AAEdnC,YAAAA,GAAG,EAAEiC;AAFS,WAAhB;AAID,SAxDI,EAyDLe,CAAC,IAAI;AACH9D,UAAAA,OAAO,CAACC,GAAR,CAAY6D,CAAZ;AACAhF,UAAAA,iBAAiB,CAAC;AAChBD,YAAAA,OAAO,EAAE;AADO,WAAD,CAAjB;AAGAf,UAAAA,OAAO,CAACyH,KAAR,CAAc;AACZtC,YAAAA,OAAO,EAAG,sBADE;AAEZnC,YAAAA,GAAG,EAAEiC;AAFO,WAAd;AAID,SAlEI,CAAP;AAoED,OAtED;;AAuEAY,MAAAA,MAAM,CAAC6B,aAAP,CAAqB9B,IAArB,EAhFoB,CAkFpB;;AACA,aAAO,KAAP;AACD,KA1FW,CA2FZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtGY,GAAd;AAwGA,MAAI+B,YAAJ;;AACA,MAAIlG,MAAM,CAACmG,MAAP,GAAgB,CAApB,EAAuB;AACrBD,IAAAA,YAAY,gBACV;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAsC,MAAA,OAAO,EAAE7F,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD,GAND,MAMO;AACL6F,IAAAA,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAf;AACD;;AAED,sBACE,uDACE,oBAAC,OAAD,oBAAatC,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDAFF,eAME;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANF,CADF,eASE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpE,OADH,eAEE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAEQ,MAAnB;AAA2B,IAAA,gBAAgB,EAAEG,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,eAcE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B+F,YAA/B,CAdF,CADF;AAkBD;;AAED,eAAe9G,UAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport UploadedImages from \"../contexts/UploadedImages\";\nimport useAxios from \"../hooks/useAxios\";\nimport useUrlBuilder from \"../hooks/useUrlBuilder\";\nimport { SearchBar } from \"../components/SearchBar\";\nimport { VideoList } from \"../components/VideoList\";\nimport { VideoDetail } from \"../components/VideoDetail\";\nimport youtube, { KEY } from \"../api/youtube\";\nimport FirebaseContext from \"../firebase/context\";\nimport { vision } from \"../env\";\nimport axios from \"axios\";\n\nconst { Dragger } = Upload;\n\nfunction FileUpload() {\n  const uploaded = useContext(UploadedImages);\n  const { loading, setUploadedImages } = uploaded;\n  const [tesText, settesText] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const [realloading, setLoading] = useState(true);\n  const [docTitle, setdocTitle] = useState(\"\");\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const { firebase } = React.useContext(FirebaseContext);\n\n  function handleSubmit() {\n    const newTitle = messages[1].item;\n    setdocTitle(\"ID\" + newTitle);\n    const newLink = {\n      messages,\n      newTitle: \"ID\" + newTitle\n    };\n    console.log(newTitle);\n    firebase.db\n      .collection(\"syllabus\")\n      .doc(\"Id\" + newTitle)\n      .set(newLink);\n    console.log(newLink);\n    //firebase.db.collection(\"links\").add(newLink);\n    //const voteRef = firebase.db.collection(\"category\").doc(sub);\n    /*    voteRef.get().then(doc => {\n      if (doc.exists) {\n         const prevNum = doc.data().numPosts;\n        let newNum = prevNum + 1;\n        console.log(doc.data().numPosts);\n        firebase.db\n          .collection(\"category\")\n          .doc(sub)\n          .set(\n            {\n              numPosts: newNum\n            },\n            { merge: true }\n          ); \n      }*/\n  }\n\n  const onSearchSubmit = async searchTerm => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: searchTerm,\n        part: \"snippet\",\n        maxResults: 1,\n        key: KEY\n      }\n    });\n    const responseArr = response.data.items;\n    const firstVideo =\n      responseArr[0].id.kind !== \"youtube#channel\"\n        ? responseArr[0]\n        : responseArr[1];\n    setVideos(responseArr);\n    setSelectedVideo(firstVideo);\n    return responseArr;\n  };\n  const [ocrState, ocrSend] = useAxios({\n    url: `images:annotate`,\n    method: \"POST\"\n  });\n\n  const fetchLinks = endpoint => {\n    fetch(endpoint);\n    then(res => res.text()) // convert to plain text\n      .then(text => console.log(text));\n  };\n\n  const endpoint = \"https://vision.googleapis.com/v1/images:annotate\";\n  const searchEndpoint = \"https://reddit-scraper.vercel.app/search\";\n  const preFormat = arr => {\n    return [arr[0].x, arr[0].y, arr[1].x - arr[0].x, arr[3].y - arr[0].y];\n  };\n\n  const tidyResults = raw => {\n    let results = {\n      texts: [],\n      boundings: []\n    };\n    raw.map((item, index) => {\n      if (index > 0) {\n        results.texts.push(item.description);\n        results.boundings.push(preFormat(item.boundingPoly.vertices));\n      }\n    });\n    return results;\n  };\n\n  const messageKey = \"loadingMsg\";\n\n  const onLoading = () => {\n    message.loading({\n      content: \"Analyzing image..\",\n      duration: 0,\n      key: messageKey\n    });\n  };\n\n  const props = {\n    name: \"file\",\n    multiple: false,\n    accept: \".png,.jpeg,.jpg\",\n    showUploadList: false,\n    disabled: loading,\n    beforeUpload: file => {\n      onLoading(true);\n      // onLoading(false)\n\n      setUploadedImages({\n        loading: true\n      });\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        const base64 = e.target.result.toString().replace(/^data:(.*,)?/, \"\");\n        ocrSend(\n          {\n            url: endpoint,\n            params: {\n              key: vision.api_key\n            },\n            data: {\n              requests: [\n                {\n                  image: {\n                    content: base64\n                  },\n                  features: [\n                    {\n                      type: \"DOCUMENT_TEXT_DETECTION\"\n                    }\n                  ]\n                }\n              ]\n            }\n          },\n          res => {\n            const searchVal = res.responses[0].fullTextAnnotation.text.split(\n              /\\s*[\\r\\n]+\\s*/g\n            );\n\n            settesText(searchVal);\n            let searchArr = [];\n            searchVal.map((item, index) => {\n              fetchLinks(`${searchEndpoint}${item}`);\n              const testItem = onSearchSubmit(item);\n              let searchItem;\n              testItem.then(val => {\n                searchItem = {\n                  val,\n                  item\n                };\n                //console.log(searchItem);\n                searchArr.push(searchItem);\n                //console.log(searchArr);\n                setMessages(searchArr);\n              });\n            });\n\n            setUploadedImages({\n              loading: false,\n              base64,\n              ocrResultsRaw: res.responses[0],\n              ocrResults: tidyResults(res.responses[0].textAnnotations),\n              createdAt: new Date()\n            });\n            console.log(new Date());\n            message.success({\n              content: `action done successfully.`,\n              key: messageKey\n            });\n          },\n          e => {\n            console.log(e);\n            setUploadedImages({\n              loading: false\n            });\n            message.error({\n              content: `Ops, Something wrong`,\n              key: messageKey\n            });\n          }\n        );\n      };\n      reader.readAsDataURL(file);\n\n      // Prevent upload\n      return false;\n    }\n    // action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    // onChange(info) {\n    //   const { status } = info.file;\n    //   if (status !== 'uploading') {\n    //     console.log(info.file, info.fileList);\n    //   }\n    //   if (status === 'done') {\n    //     message.success(`${info.file.name} file uploaded successfully.`);\n    //   } else if (status === 'error') {\n    //     message.error(`${info.file.name} file upload failed.`);\n    //   }\n    // },\n  };\n  let submitButton;\n  if (videos.length > 0) {\n    submitButton = (\n      <button className=\"button cda-remove\" onClick={handleSubmit}>\n        Submit\n      </button>\n    );\n  } else {\n    submitButton = <div>No syllabus entered</div>;\n  }\n\n  return (\n    <>\n      <Dragger {...props}>\n        <p className=\"ant-upload-drag-icon\">Inbox</p>\n        <p className=\"ant-upload-text\">\n          Click or drag image to this area to start analyze\n        </p>\n\n        <p className=\"ant-upload-hint\">Only accept jpeg,jpg and png files.</p>\n      </Dragger>\n      <div className=\"five wide column\">\n        {tesText}\n        <VideoList videos={videos} setSelectedVideo={setSelectedVideo} />\n      </div>\n\n      <div className=\"form__margin\">{submitButton}</div>\n    </>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}
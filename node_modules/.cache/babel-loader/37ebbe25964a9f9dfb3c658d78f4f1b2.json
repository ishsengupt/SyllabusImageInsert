{"ast":null,"code":"var _jsxFileName = \"/Users/shanengupta/Desktop/react-ocr/src/components/LinksContainer.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\nimport ImageContainer from \"./ImageContainer\";\n\nfunction LinksContainer(props) {\n  const [open, setOpen] = useState(false);\n  let rootComments;\n\n  if (open) {\n    rootComments = props.comments.map((c, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex__row border__item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ImageContainer, {\n      image: c.site,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: c.linkHref,\n      className: \"padding__left smaller__font padding__sides\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, c.linkText)));\n  } else if (!open) {\n    rootComments = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }, \"No\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex__column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, rootComments, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setOpen(!open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Toggle\"));\n}\n\nexport default withRouter(LinksContainer);","map":{"version":3,"sources":["/Users/shanengupta/Desktop/react-ocr/src/components/LinksContainer.js"],"names":["React","useState","ReactDOM","Link","withRouter","NavLink","ImageContainer","LinksContainer","props","open","setOpen","rootComments","comments","map","c","index","site","linkHref","linkText"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,OAA3B,QAA0C,kBAA1C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,KAAD,CAAhC;AAEA,MAAIU,YAAJ;;AACA,MAAIF,IAAJ,EAAU;AACRE,IAAAA,YAAY,GAAGH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,CAACC,CAAD,EAAIC,KAAJ,kBAChC;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAED,CAAC,CAACE,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAEF,CAAC,CAACG,QADR;AAEE,MAAA,SAAS,EAAC,4CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGH,CAAC,CAACI,QAJL,CAFF,CADa,CAAf;AAWD,GAZD,MAYO,IAAI,CAACT,IAAL,EAAW;AAChBE,IAAAA,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAf;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,YADH,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD;;AAED,eAAeL,UAAU,CAACG,cAAD,CAAzB","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Link, withRouter, NavLink } from \"react-router-dom\";\nimport ImageContainer from \"./ImageContainer\";\n\nfunction LinksContainer(props) {\n  const [open, setOpen] = useState(false);\n\n  let rootComments;\n  if (open) {\n    rootComments = props.comments.map((c, index) => (\n      <div className=\"flex__row border__item\">\n        <ImageContainer image={c.site} />\n        <Link\n          to={c.linkHref}\n          className=\"padding__left smaller__font padding__sides\"\n        >\n          {c.linkText}\n        </Link>\n      </div>\n    ));\n  } else if (!open) {\n    rootComments = <div>No</div>;\n  }\n\n  return (\n    <div className=\"flex__column\">\n      {rootComments}\n      <button onClick={() => setOpen(!open)}>Toggle</button>\n    </div>\n  );\n}\n\nexport default withRouter(LinksContainer);\n"]},"metadata":{},"sourceType":"module"}